# HTTP Test File for Student Update Methods
# You can use this file with VS Code REST Client extension or similar tools

### Variables
@baseUrl = http://localhost:8080/api/students
@studentId = 1

### 1. Create a test student first (POST)
POST {{baseUrl}}
Content-Type: application/json

{
    "name": "Test Student",
    "rollNo": 99999,
    "branch": "Computer Science",
    "course": "B.Tech"
}

### 2. Get the created student (GET)
GET {{baseUrl}}/{{studentId}}

### 3. Full Update using PUT method
PUT {{baseUrl}}/{{studentId}}
Content-Type: application/json

{
    "name": "Test Student Updated",
    "rollNo": 99999,
    "branch": "Information Technology",
    "course": "B.Tech"
}

### 4. Partial Update using PATCH method - Update only name
PATCH {{baseUrl}}/{{studentId}}
Content-Type: application/json

{
    "name": "Partially Updated Student"
}

### 5. Partial Update using PATCH method - Update only branch and course
PATCH {{baseUrl}}/{{studentId}}
Content-Type: application/json

{
    "branch": "Electrical Engineering",
    "course": "M.Tech"
}

### 6. Partial Update using PATCH method - Update roll number
PATCH {{baseUrl}}/{{studentId}}
Content-Type: application/json

{
    "rollNo": 88888
}

### 7. Get the updated student to verify changes
GET {{baseUrl}}/{{studentId}}

### 8. Test error case - Try to update with existing roll number
PATCH {{baseUrl}}/{{studentId}}
Content-Type: application/json

{
    "rollNo": 12345
}

### 9. Test error case - Try to update non-existent student
PUT {{baseUrl}}/999
Content-Type: application/json

{
    "name": "Non Existent",
    "rollNo": 77777,
    "branch": "Test Branch",
    "course": "Test Course"
}

### 10. Clean up - Delete the test student
DELETE {{baseUrl}}/{{studentId}}