{
	"info": {
		"_postman_id": "user-management-api",
		"name": "User Management API",
		"description": "Complete RESTful API for User Management System with CRUD operations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Core CRUD Operations",
			"item": [
				{
					"name": "GET - Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Retrieve all users from the database"
					}
				},
				{
					"name": "GET - Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						},
						"description": "Retrieve a specific user by their ID"
					}
				},
				{
					"name": "POST - Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Alice Johnson\",\n    \"rollNo\": 12347,\n    \"branch\": \"Mechanical Engineering\",\n    \"course\": \"B.Tech\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Create a new user record"
					}
				},
				{
					"name": "PATCH - Update User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Alice Johnson Updated\",\n    \"branch\": \"Information Technology\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						},
						"description": "Update specific fields of an existing user (partial update)"
					}
				},
				{
					"name": "DELETE - Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						},
						"description": "Delete a specific user by their ID"
					}
				}
			],
			"description": "Core CRUD operations following REST conventions"
		},
		{
			"name": "Utility Endpoints",
			"item": [
				{
					"name": "GET - Search Users by Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/search?name=John",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "John"
								}
							]
						},
						"description": "Search users by name (case insensitive)"
					}
				},
				{
					"name": "GET - Get User by Roll Number",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/rollno/12345",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"rollno",
								"12345"
							]
						},
						"description": "Get user by their roll number"
					}
				},
				{
					"name": "GET - Get Users by Branch",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/branch/Computer Science",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"branch",
								"Computer Science"
							]
						},
						"description": "Get all users from a specific branch"
					}
				},
				{
					"name": "GET - Get Users by Course",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/course/B.Tech",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"course",
								"B.Tech"
							]
						},
						"description": "Get all users from a specific course"
					}
				}
			],
			"description": "Additional utility endpoints for specific queries"
		},
		{
			"name": "Error Testing",
			"item": [
				{
					"name": "GET - Non-existent User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/999999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"999999"
							]
						},
						"description": "Test 404 error for non-existent user"
					}
				},
				{
					"name": "POST - Invalid Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"rollNo\": -1,\n    \"branch\": \"\",\n    \"course\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Test validation errors with invalid data"
					}
				},
				{
					"name": "POST - Duplicate Roll Number",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Duplicate User\",\n    \"rollNo\": 12345,\n    \"branch\": \"Test Branch\",\n    \"course\": \"Test Course\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Test duplicate roll number error"
					}
				},
				{
					"name": "PATCH - Non-existent User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Name\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/999999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"999999"
							]
						},
						"description": "Test update error for non-existent user"
					}
				},
				{
					"name": "DELETE - Non-existent User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/999999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"999999"
							]
						},
						"description": "Test delete error for non-existent user"
					}
				}
			],
			"description": "Test error scenarios and edge cases"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}